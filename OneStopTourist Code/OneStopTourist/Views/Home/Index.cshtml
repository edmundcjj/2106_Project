@model IEnumerable<OneStopTourist.Models.HomePage>

@{
    ViewBag.Title = "Home Page";
}

<!-- jQuery Reference -->
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
<!-- Your Script -->

<div class="row">
    <div class="col-md-12">
        <div id="map" style="width:100%;height:320px;">
            <div id="directionsPanel" style="width:100%;height:320px;"></div>
        </div>
    </div>
</div>
<br/><br/>
<div class="row">
    <div class="col-md-8">
        <h2 style="display:inline">Itinerary</h2>
        @Html.ActionLink("Save", "saveItinerary", "Home")
        @Html.ActionLink("Upload", "Upload", "Personal_Itineraries")
        <br />
        <br/>        
        @*Your personal itinerary is empty.<br/>
        @Html.ActionLink("View some recommended itineraries?", "RecommendedItineraries", "Itinerary")<br/>
        @Html.ActionLink("View all itineraries?", "Itineraries", "Itinerary")*@
        <table style="width:100%">
            @foreach (var item in Model.Skip(5))
            {
                if (item.getAttraction != null)
                {
                    <tr>
                        <td style="width:80%">
                            @Html.DisplayFor(modelItem => item.getAttraction.Name)
                        </td>
                        <td>
                            <a href="@Url.Action("ViewAttraction", "Attraction", new { id = item.getAttraction.Aid })">
                                <img src="@Url.Content("~/Images/more.png")" width="25" />
                            </a>
                        </td>
                        <td>
                            <a href="@Url.Action("MoveAttractionUp", "Home", new { id = item.getAttraction.Aid })">
                                <img src="@Url.Content("~/Images/arrowup.png")" width="25" />
                            </a>
                        </td>
                        <td>
                            <a href="@Url.Action("MoveAttractionDown", "Home", new { id = item.getAttraction.Aid })">
                                <img src="@Url.Content("~/Images/arrowdown.png")" width="25" />
                            </a>
                        </td>
                        <td>
                            <a href="@Url.Action("RemoveAttraction", "Home", new { id = item.getAttraction.Aid })">
                                <img src="@Url.Content("~/Images/trash.png")" width="25" />
                            </a>
                        </td>
                    </tr>
                }
                else if (item.getService != null)
                {
                    <tr>
                        <td style="width:80%">
                            @Html.DisplayFor(modelItem => item.getService.Name)
                        </td>
                        <td>
                            <a href="@Url.Action("ViewService", "Service", new { id = item.getService.Sid })">
                                <img src="@Url.Content("~/Images/more.png")" width="25" />
                            </a>
                        </td>
                        <td>
                            <a href="@Url.Action("MoveServiceUp", "Home", new { id = item.getService.Sid })">
                                <img src="@Url.Content("~/Images/arrowup.png")" width="25" />
                            </a>
                        </td>
                        <td>
                            <a href="@Url.Action("MoveServiceDown", "Home", new { id = item.getService.Sid })">
                                <img src="@Url.Content("~/Images/arrowdown.png")" width="25" />
                            </a>
                        </td>
                        <td>
                            <a href="@Url.Action("RemoveService", "Home", new { id=item.getService.Sid })">
                                <img src="@Url.Content("~/Images/trash.png")" width="25" />
                            </a>
                        </td>
                    </tr>
                }
                else
                {

                }
            }
        </table>

        <!--<p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>-->
    </div>
    <div class="col-md-4">
        <table style="width:100%">
            <tr>
                <td>
                    <h2>Attractions</h2>
                </td>
                <td colspan="2">
                    @Html.ActionLink("View more...", "Attractions", "Attraction")
                </td>
                <td>
                </td>
            </tr>
            @foreach (var item in Model.Take(5))
            {
                <tr>
                    <td style="width:80%">
                        @Html.DisplayFor(modelItem => item.getAttraction.Name)
                    </td>
                    <td>
                        <a href="@Url.Action("ViewAttraction", "Attraction", new { id = item.getAttraction.Aid })">
                            <img src="@Url.Content("~/Images/more.png")" width="15" />
                        </a>
                    </td>
                    <td>
                        <a href="@Url.Action("AddAttraction", "Home", new { id = item.getAttraction.Aid })">
                            <img src="@Url.Content("~/Images/plus.png")" width="15" />
                        </a>
                    </td>
                </tr>
            }
        </table>
        <br/>
        <table style="width:100%">
            <tr>
                <td>
                    <h2>Services</h2>
                </td>
                <td colspan="2">
                    @Html.ActionLink("View more...", "Services", "Service")
                </td>
                <td></td>
            </tr>
            @foreach (var item in Model.Take(5))
            {
                <tr>
                    <td style="width:80%">
                        @Html.DisplayFor(modelItem => item.getService.Name)
                    </td>
                    <td>
                        <a href="@Url.Action("ViewService", "Service", new { id = item.getService.Sid })">
                            <img src="@Url.Content("~/Images/more.png")" width="15" />
                        </a>
                    </td>
                    <td>
                        <a href="@Url.Action("AddService", "Home", new { id=item.getService.Sid })">
                            <img src="@Url.Content("~/Images/plus.png")" width="15" />
                        </a>
                    </td>
                </tr>
            }
        </table>

    </div>
</div>

<script language="JavaScript" type="text/javascript" src="../../Scripts/map.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>

<script>
    map = new google.maps.Map(document.getElementById('map'), {
        center: { lat: 1.3, lng: 103.8 },
        zoom: 11
    });

    var items = [];
    @foreach(var item in Model.Skip(5))
    {
        if (item.getAttraction != null) {
        <text>
            items.push(@Html.Raw(Json.Encode(item.getAttraction.Latitude)) + "," + @Html.Raw(Json.Encode(item.getAttraction.Longitude)));
        </text>
    }
    else
    {
        <text>
            items.push(@Html.Raw(Json.Encode(item.getService.Latitude)) + "," + @Html.Raw(Json.Encode(item.getService.Longitude)));
        </text>
        }
    }
    console.log(items);

    var directionsService = new google.maps.DirectionsService();

    var renderOptions = { draggable: true };
    var directionDisplay = new google.maps.DirectionsRenderer(renderOptions);

    //set the directions display service to the map
    directionDisplay.setMap(map);
    //set the directions display panel
    //panel is usually just and empty div.
    //This is where the turn by turn directions appear.
    directionDisplay.setPanel(document.getElementById("directionsPanel"));

    //build the waypoints
    //free api allows a max of 9 total stops including the start and end address
    //premier allows a total of 25 stops.
    var waypoints = [];
    for (var i = 0; i < items.length; i++) {
        var address = items[i];
        if (address !== "") {
            waypoints.push({
                location: address,
                stopover: true
            });
        }
    }
    console.log(waypoints);

    var startOrigin = waypoints[0].location;
    var originCoor = startOrigin.split(",");
    console.log(originCoor[0]);
    console.log(originCoor[1]);
    var originAddress = new google.maps.LatLng(originCoor[0], originCoor[1]);

    //set the starting address and destination address
    var endOrigin = waypoints[waypoints.length-1].location;
    var destCoor = endOrigin.split(",");
    console.log(destCoor[0]);
    console.log(destCoor[1]);
    var destinationAddress = new google.maps.LatLng(destCoor[0], destCoor[1]);

    //build directions request
    var request = {
        origin: originAddress,
        destination: destinationAddress,
        waypoints: waypoints, //an array of waypoints
        optimizeWaypoints: false, //set to true if you want google to determine the shortest route or false to use the order specified.
        travelMode: google.maps.DirectionsTravelMode.DRIVING
    };

    //get the route from the directions service
    directionsService.route(request, function (response, status) {
        if (status == google.maps.DirectionsStatus.OK) {
            directionDisplay.setDirections(response);
        }
        else {
            //handle error
        }
    });
</script>